name: 'CI-Pocketknife visual regression action'
description: 'It allows running visual regression tests as actions'
inputs:
  ci_vr_reference_website_url:
    description: 'Reference URL'
    required: true
  ci_vr_url_list_limit:
    description: 'Limit URLs list'
    required: false
  ci_vr_url_list_randomize:
    description: 'Randomize URLs list'
    required: false
  ci_vr_test_website_url:
    description: 'Test URL'
    required: true
  ci_vr_working_folder:
    description: 'Working folder on host'
    required: false
    default: /tmp/ci
  ci_vr_docker_network:
    description: 'Network switch for dockery'
    required: false
    default: host
runs:
  using: "composite"
  steps:
    - name: Set up environment variables
      shell: bash
      run: |
        echo "CI_VR_WORKING_FOLDER=${{ inputs.ci_vr_working_folder }}" >> $GITHUB_ENV && \
        echo "CI_VR_REFERENCE_WEBSITE_URL=${{ inputs.ci_vr_reference_website_url }}" >> $GITHUB_ENV && \
        echo "CI_VR_URL_LIST_LIMIT=${{ inputs.ci_vr_url_list_limit > 0 && echo '--limit='inputs.ci_vr_url_list_limit || echo '' }}" >> $GITHUB_ENV && \
        echo "CI_VR_URL_LIST_RANDOMIZE=${{ inputs.ci_vr_url_list_randomize > 0 && echo '--random' || echo '' }}" >> $GITHUB_ENV && \
        echo "CI_VR_TEST_WEBSITE_URL=${{ inputs.ci_vr_test_website_url }}" >> $GITHUB_ENV && \
        echo "CI_VR_DOCKER_NETWORK=${{ inputs.ci_vr_docker_network }}" >> $GITHUB_ENV

    - name: Install automated testing tools
      shell: bash
      run: |
        cd app/vendor/iqual-ch/ci-pocketknife-installer/ && \
        source installer.sh && \
        echo "${{ inputs.ci_vr_working_folder }}/bin" >> $GITHUB_PATH

    - name: Collect internal URLs starting from the homepage
      shell: bash
      run: |
        g glue:lynx-crawl $CI_VR_REFERENCE_WEBSITE_URL $CI_VR_URL_LIST_LIMIT $CI_VR_URL_LIST_RANDOMIZE > $CI_VR_WORKING_FOLDER/crawled_urls_reference.csv && \
        cat $CI_VR_WORKING_FOLDER/crawled_urls_reference.csv

    - name: Dynamic configuration for BackstopJS
      shell: bash
      run: |
        g glue:backstop:config --uris='/app/data/crawled_urls_reference.csv' --url=$CI_VR_TEST_WEBSITE_URL --referenceUrl=$CI_VR_REFERENCE_WEBSITE_URL > $CI_VR_WORKING_FOLDER/backstop_config.json  && \
        cat $CI_VR_WORKING_FOLDER/backstop_config.json

    - name: Generate references for BackstopJS
      shell: bash
      run: |
        g glue:backstop:reference --config '/app/data/backstop_config.json'

    - name: Run tests for BackstopJS
      shell: bash
      run: |
        g glue:backstop:test --config '/app/data/backstop_config.json'

    - name: Generate report
      if: always()
      shell: bash
      run: |
        g glue:report

    - name: Upload report
      if: failure()
      uses: actions/upload-artifact@v3
      with:
        name: backstopjs-report
        path: ${{ inputs.ci_vr_working_folder }}/report.pdf
